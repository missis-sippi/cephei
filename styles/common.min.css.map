{"version":3,"sources":["base/reset.styl","common.css","global.styl","base/mixins.styl","sprite/sprite.styl","../../node_modules/stylus/lib/functions/index.styl","svg-sprite/sprite.styl","../vendor/slick/slick.styl","components/icons.styl","components/welcome.styl"],"names":[],"mappings":"AAAA,EACE,qBAAA,CCCD,KDEC,QAAA,CCCD,EDEC,sBAAA,CCCD,iBDMC,SAAA,CCCD,qDDKC,qBAAA,mBACA,CCCD,EDEC,sCAAA,CCCD,MDEC,QAAA,CCCD,6BDKC,oBAAA,cACA,eACA,QACA,CCCD,oEDKC,wBAAA,eACA,QACA,CCCD,sCDGC,cAAA,CCCD,iDDGC,SAAA,SACA,CCCD,cDGC,mBAAA,CCCD,SDEC,cAAA,kBACA,CCCD,MDEC,yBAAA,gBACA,CCCD,GDEC,cAAA,aACA,UACA,WACA,SACA,yBACA,CCCD,MDEC,aAAA,CCCD,KC5EC,yDAAA,mCCiEE,iCACA,CFeH,KC7EC,qBAAA,CDiFD,OChFC,UAAA,CDqFD,ECjFC,2CAAA,wBACA,CDgFD,QC9EG,mBAAA,CDiFH,iBC9EC,+BAAA,gBACA,CDiFD,YClFC,+BAAA,gBACA,CDiFD,6DG/FC,qBAAA,2CACA,qBACA,CHsGD,aI4JQ,6BAAA,WAAA,WAAA,CJvJR,WIuJQ,iCAAA,WAAA,WAAA,CJlJR,UIkJQ,2BAAA,UAAA,WAAA,CJ7IR,cI6IQ,6BAAA,UAAA,UAAA,CJxIR,aIwIQ,wBAAA,YAAA,YAAA,CJnIR,oEKnIA,wCAAA,CL0IA,cKtIA,uBAAA,CLyIA,mBKtIA,WAAA,WACA,CLyIA,aKrIA,yBAAA,CLwIA,kBKrIA,WAAA,WACA,CLwIA,aKpIA,0BAAA,CLuIA,kBKpIA,WAAA,WACA,CLuIA,eKnIA,4BAAA,CLsIA,oBKnIA,WAAA,WACA,CLsIA,aKlIA,0BAAA,CLqIA,kBKlIA,WAAA,WACA,CLqIA,cMtKQ,sBAAA,yBAEL,sBACG,qBACC,iBACI,2BAER,wBACA,uBACA,mBACI,yCACJ,CN0KH,0BM1LG,kBAAA,aAEA,CN+LH,YMzKG,gBAAA,SAEA,SACA,CNsKH,kBMlKG,SAAA,CNqKH,qBMjKG,eAAA,WACA,CNoKH,qDM9JG,qCAAA,4BAIQ,CNkKX,aM7JG,kBAAA,MACA,OACA,aAEA,CN+JH,uCM1JG,cAAA,UAEA,CN6JH,mBMzJG,UAAA,CN4JH,4BMxJG,iBAAA,CN2JH,aMtJG,aAAA,WACA,YAEA,cACA,CNwJH,uBMpJG,WAAA,CNuJH,iBMnJG,aAAA,CNsJH,+BMlJG,YAAA,CNqJH,0BMjJG,mBAAA,CNoJH,gCMhJG,aAAA,CNmJH,4BM/IG,iBAAA,CNkJH,6BM9IG,cAAA,YAEA,4BAEA,CN+IH,kBO5PC,kBAAA,cACA,0CACA,iCAAA,CP+PD,cO5PC,kBAAA,qBACA,sBACA,eACA,CP+PD,sBAUA,aOrRC,GACE,iCAAA,wBAAA,CP6RD,CACF,KQ/RC,WAAA,gBACA,iBACA,CRkSD,cQ9RC,aAAA,qBACA,oBAAA,aAAA,2BACA,sBAAA,mBAAA,sCACA,sBAAA,6BAAA,CRkSD","file":"common.min.css","sourcesContent":["*\n  box-sizing border-box\n\nbody\n  margin 0\n\na\n  background transparent\n\na:focus\n  outline thin dotted\n\na:active\na:hover\n  outline 0\n\nselect:focus\ninput:focus\ntextarea:focus\nbutton:focus\n  outline #5B9DD9 auto\n  outline-offset -1px\n\nq\n  quotes \"\\00ab\" \"\\00bb\" \"\\201e\" \"\\201c\"\n\na img\n  border 0\n\nbutton\ninput\nselect\ntextarea\n  font-family inherit\n  color inherit\n  font-size 100%\n  margin 0\n\nbutton\nhtml input[type=\"button\"]\ninput[type=\"reset\"]\ninput[type=\"submit\"]\n  -webkit-appearance none\n  cursor pointer\n  border 0\n\nbutton[disabled]\nhtml input[disabled]\n  cursor default\n\nbutton::-moz-focus-inner\ninput::-moz-focus-inner\n  border 0\n  padding 0\n\nbutton,\nselect\n  text-transform none\n\ntextarea\n  overflow auto\n  vertical-align top\n\ntable\n  border-collapse collapse\n  border-spacing 0\n\nhr\n  display block\n  margin 1em 0\n  padding 0\n  height 1px\n  border 0\n  border-top 1px solid #ccc\n\nsmall\n  font-size 80%\n","* {\n  box-sizing: border-box;\n}\nbody {\n  margin: 0;\n}\na {\n  background: transparent;\n}\na:focus {\n  outline: thin dotted;\n}\na:active,\na:hover {\n  outline: 0;\n}\nselect:focus,\ninput:focus,\ntextarea:focus,\nbutton:focus {\n  outline: #5b9dd9 auto;\n  outline-offset: -1px;\n}\nq {\n  quotes: \"\\00ab\" \"\\00bb\" \"\\201e\" \"\\201c\";\n}\na img {\n  border: 0;\n}\nbutton,\ninput,\nselect,\ntextarea {\n  font-family: inherit;\n  color: inherit;\n  font-size: 100%;\n  margin: 0;\n}\nbutton,\nhtml input[type=\"button\"],\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n  -webkit-appearance: none;\n  cursor: pointer;\n  border: 0;\n}\nbutton[disabled],\nhtml input[disabled] {\n  cursor: default;\n}\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  border: 0;\n  padding: 0;\n}\nbutton,\nselect {\n  text-transform: none;\n}\ntextarea {\n  overflow: auto;\n  vertical-align: top;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\nhr {\n  display: block;\n  margin: 1em 0;\n  padding: 0;\n  height: 1px;\n  border: 0;\n  border-top: 1px solid #ccc;\n}\nsmall {\n  font-size: 80%;\n}\nhtml {\n  font: 16px/1.5 \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\nbody {\n  background-color: #fff;\n  color: #000;\n}\na {\n  color: #000;\n  transition-property: color, background-color;\n  transition-duration: 150ms;\n}\na:focus {\n  outline: thin dotted;\n}\n::selection {\n  background: rgba(255,138,0,0.33);\n  text-shadow: none;\n}\n.icon-coffee,\n.icon-gulp,\n.icon-npm,\n.icon-postcss,\n.icon-stylus {\n  display: inline-block;\n  background-image: url(\"../images/sprite.png\");\n  vertical-align: middle;\n}\n.icon-coffee {\n  background-position: -252px 0px;\n  width: 87px;\n  height: 70px;\n}\n.icon-gulp {\n  background-position: -252px -74px;\n  width: 45px;\n  height: 100px;\n}\n.icon-npm {\n  background-position: 0px -144px;\n  width: 128px;\n  height: 50px;\n}\n.icon-postcss {\n  background-position: -152px 0px;\n  width: 96px;\n  height: 96px;\n}\n.icon-stylus {\n  background-position: 0px 0px;\n  width: 148px;\n  height: 140px;\n}\n.svg-facebook,\n.svg-spinner,\n.svg-twitter,\n.svg-vkontakte,\n.svg-youtube {\n  background: url(\"sprite.css.svg\") no-repeat;\n}\n.svg-facebook {\n  background-position: 0 0;\n}\n.svg-facebook-icon {\n  width: 50px;\n  height: 50px;\n}\n.svg-spinner {\n  background-position: 50% 0;\n}\n.svg-spinner-icon {\n  width: 50px;\n  height: 50px;\n}\n.svg-twitter {\n  background-position: 0 100%;\n}\n.svg-twitter-icon {\n  width: 50px;\n  height: 50px;\n}\n.svg-vkontakte {\n  background-position: 50% 100%;\n}\n.svg-vkontakte-icon {\n  width: 50px;\n  height: 50px;\n}\n.svg-youtube {\n  background-position: 100% 0;\n}\n.svg-youtube-icon {\n  width: 50px;\n  height: 50px;\n}\n.slick-slider {\n  position: relative;\n  display: block;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  -webkit-touch-callout: none;\n  -khtml-user-select: none;\n  -ms-touch-action: pan-y;\n  touch-action: pan-y;\n  -webkit-tap-highlight-color: transparent;\n}\n.slick-list {\n  position: relative;\n  display: block;\n  overflow: hidden;\n  margin: 0;\n  padding: 0;\n}\n.slick-list:focus {\n  outline: none;\n}\n.slick-list.dragging {\n  cursor: pointer;\n  cursor: hand;\n}\n.slick-slider .slick-track,\n.slick-slider .slick-list {\n  -webkit-transform: translate3d(0, 0, 0);\n  -moz-transform: translate3d(0, 0, 0);\n  -ms-transform: translate3d(0, 0, 0);\n  -o-transform: translate3d(0, 0, 0);\n  transform: translate3d(0, 0, 0);\n}\n.slick-track {\n  position: relative;\n  top: 0;\n  left: 0;\n  display: block;\n}\n.slick-track:before,\n.slick-track:after {\n  display: table;\n  content: '';\n}\n.slick-track:after {\n  clear: both;\n}\n.slick-loading .slick-track {\n  visibility: hidden;\n}\n.slick-slide {\n  display: none;\n  float: left;\n  height: 100%;\n  min-height: 1px;\n}\n[dir='rtl'] .slick-slide {\n  float: right;\n}\n.slick-slide img {\n  display: block;\n}\n.slick-slide.slick-loading img {\n  display: none;\n}\n.slick-slide.dragging img {\n  pointer-events: none;\n}\n.slick-initialized .slick-slide {\n  display: block;\n}\n.slick-loading .slick-slide {\n  visibility: hidden;\n}\n.slick-vertical .slick-slide {\n  display: block;\n  height: auto;\n  border: 1px solid transparent;\n}\n.svg-spinner-icon {\n  position: relative;\n  display: block;\n  animation: spin 1s steps(12) infinite;\n}\n.icon-spinner {\n  position: relative;\n  display: inline-block;\n  vertical-align: middle;\n  overflow: hidden;\n}\n@-moz-keyframes spin {\n  100% {\n    transform: rotate(360deg);\n  }\n}\n@-webkit-keyframes spin {\n  100% {\n    transform: rotate(360deg);\n  }\n}\n@-o-keyframes spin {\n  100% {\n    transform: rotate(360deg);\n  }\n}\n@keyframes spin {\n  100% {\n    transform: rotate(360deg);\n  }\n}\nbody {\n  width: 60em;\n  margin: 4em auto;\n  text-align: center;\n}\nheader,\nfooter {\n  margin: 4em 0;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n","html\n  font $base-font-size/$base-line-hight $base-font-family\n  font-smoothing()\n\nbody\n  background-color $color-base-bg\n  color $color-base\n\na\n  color $color-base\n  transition-property color, background-color\n  transition-duration 150ms\n  &:focus\n    outline thin dotted\n\n::selection\n  background rgba($color-main, 0.33)\n  text-shadow none\n","/*\n * Border triangles utility.\n *\n * Synopsis:\n *   css-triangle: <size> <color> <direction>\n *\n * Examples:\n *\n *  css-triangle(5px #000 top)\n *\n *  yields:\n *    content: ''\n *    display: block\n *    width: 0\n *    height: 0\n *    border: inset 5px\n *    border-color: transparent transparent #000 transparent\n *    border-bottom-style: solid\n */\n\ncss-triangle($triangle-size, $triangle-color, $triangle-direction)\n  content ''\n  display block\n  width 0\n  height 0\n  border inset $triangle-size\n  if ($triangle-direction == top)\n    border-color transparent transparent $triangle-color transparent\n    border-bottom-style solid\n  if ($triangle-direction == right)\n    border-color transparent transparent transparent $triangle-color\n    border-left-style solid\n  if ($triangle-direction == bottom)\n    border-color $triangle-color transparent transparent transparent\n    border-top-style solid\n  if ($triangle-direction == left)\n    border-color transparent $triangle-color transparent transparent\n    border-right-style solid\n\n\n/*\n * Clearfix\n */\n\nclearfix()\n  &:after\n    content \"\"\n    display table\n    clear both\n\n\n/*\n * Hide text\n */\n\nhide-text()\n  text-indent 200%\n  white-space nowrap\n  overflow hidden\n\n\n/*\n * Font rendering OS X\n */\nfont-smoothing(active = true)\n  if active == true\n    -webkit-font-smoothing antialiased\n    -moz-osx-font-smoothing grayscale\n  else\n    -webkit-font-smoothing subpixel-antialiased\n    -moz-osx-font-smoothing auto","$sprite = json(\"sprite.json\", { hash: true })\n\n$icon\n  display inline-block\n  background-image url('../images/sprite.png')\n  vertical-align middle\n\nfor $name, $data in $sprite\n  .icon-{$name}\n    add-property(\"background-position\", $data.x * -1px $data.px.y * -1px)\n    add-property(\"width\", $data.px.width)\n    add-property(\"height\", $data.px.height)\n    @extend $icon\n","called-from = ()\n\nvendors = moz webkit o ms official\n\n// stringify the given arg\n\n-string(arg)\n  type(arg) + ' ' + arg\n\n// require a color\n\nrequire-color(color)\n  unless color is a 'color'\n    error('RGB or HSL value expected, got a ' + -string(color))\n\n// require a unit\n\nrequire-unit(n)\n  unless n is a 'unit'\n    error('unit expected, got a ' + -string(n))\n\n// require a string\n\nrequire-string(str)\n  unless str is a 'string' or str is a 'ident'\n    error('string expected, got a ' + -string(str))\n\n// Math functions\n\nabs(n) { math(n, 'abs') }\nmin(a, b) { a < b ? a : b }\nmax(a, b) { a > b ? a : b }\n\n// Trigonometrics\nPI = -math-prop('PI')\n\nradians-to-degrees(angle)\n  angle * (180 / PI)\n\ndegrees-to-radians(angle)\n  unit(angle * (PI / 180),'')\n\nsin(n)\n  n = degrees-to-radians(n) if unit(n) == 'deg'\n  round(math(n, 'sin'), 9)\n\ncos(n)\n  n = degrees-to-radians(n) if unit(n) == 'deg'\n  round(math(n, 'cos'), 9)\n\n// Rounding Math functions\n\nceil(n, precision = 0)\n  multiplier = 10 ** precision\n  math(n * multiplier, 'ceil') / multiplier\n\nfloor(n, precision = 0)\n  multiplier = 10 ** precision\n  math(n * multiplier, 'floor') / multiplier\n\nround(n, precision = 0)\n  multiplier = 10 ** precision\n  math(n * multiplier, 'round') / multiplier\n\n// return the sum of the given numbers\n\nsum(nums)\n  sum = 0\n  sum += n for n in nums\n\n// return the average of the given numbers\n\navg(nums)\n  sum(nums) / length(nums)\n\n// return a unitless number, or pass through\n\nremove-unit(n)\n  if typeof(n) is \"unit\"\n    unit(n, \"\")\n  else\n    n\n\n// convert a percent to a decimal, or pass through\n\npercent-to-decimal(n)\n  if unit(n) is \"%\"\n    remove-unit(n) / 100\n  else\n    n\n\n// check if n is an odd number\n\nodd(n)\n  1 == n % 2\n\n// check if n is an even number\n\neven(n)\n  0 == n % 2\n\n// check if color is light\n\nlight(color)\n  lightness(color) >= 50%\n\n// check if color is dark\n\ndark(color)\n  lightness(color) < 50%\n\n// desaturate color by amount\n\ndesaturate(color, amount)\n  adjust(color, 'saturation', - amount)\n\n// saturate color by amount\n\nsaturate(color = '', amount = 100%)\n  if color is a 'color'\n    adjust(color, 'saturation', amount)\n  else\n    unquote( \"saturate(\" + color + \")\" )\n\n// darken by the given amount\n\ndarken(color, amount)\n  adjust(color, 'lightness', - amount)\n\n// lighten by the given amount\n\nlighten(color, amount)\n  adjust(color, 'lightness', amount)\n\n// decrease opacity by amount\n\nfade-out(color, amount)\n  color - rgba(black, percent-to-decimal(amount))\n\n// increase opacity by amount\n\nfade-in(color, amount)\n  color + rgba(black, percent-to-decimal(amount))\n\n// spin hue by a given amount\n\nspin(color, amount)\n  color + unit(amount, deg)\n\n// mix two colors by a given amount\n\nmix(color1, color2, weight = 50%)\n  unless weight in 0..100\n    error(\"Weight must be between 0% and 100%\")\n\n  if length(color1) == 2\n    weight = color1[0]\n    color1 = color1[1]\n\n  else if length(color2) == 2\n    weight = 100 - color2[0]\n    color2 = color2[1]\n\n  require-color(color1)\n  require-color(color2)\n\n  p = unit(weight / 100, '')\n  w = p * 2 - 1\n\n  a = alpha(color1) - alpha(color2)\n\n  w1 = (((w * a == -1) ? w : (w + a) / (1 + w * a)) + 1) / 2\n  w2 = 1 - w1\n\n  channels = (red(color1) red(color2)) (green(color1) green(color2)) (blue(color1) blue(color2))\n  rgb = ()\n\n  for pair in channels\n    push(rgb, floor(pair[0] * w1 + pair[1] * w2))\n\n  a1 = alpha(color1) * p\n  a2 = alpha(color2) * (1 - p)\n  alpha = a1 + a2\n\n  rgba(rgb[0], rgb[1], rgb[2], alpha)\n\n// invert colors, leave alpha intact\n\ninvert(color = '')\n  if color is a 'color'\n    rgba(#fff - color, alpha(color))\n  else\n    unquote( \"invert(\" + color + \")\" )\n\n// give complement of the given color\n\ncomplement( color )\n  spin( color, 180 )\n\n// give grayscale of the given color\n\ngrayscale( color = '' )\n  if color is a 'color'\n    desaturate( color, 100% )\n  else\n    unquote( \"grayscale(\" + color + \")\" )\n\n// mix the given color with white\n\ntint( color, percent )\n  mix( white, color, percent )\n\n// mix the given color with black\n\nshade( color, percent )\n  mix( black, color, percent )\n\n// return the last value in the given expr\n\nlast(expr)\n  expr[length(expr) - 1]\n\n// return keys in the given pairs or object\n\nkeys(pairs)\n  ret = ()\n  if type(pairs) == 'object'\n    for key in pairs\n      push(ret, key)\n  else\n    for pair in pairs\n      push(ret, pair[0]);\n  ret\n\n// return values in the given pairs or object\n\nvalues(pairs)\n  ret = ()\n  if type(pairs) == 'object'\n    for key, val in pairs\n      push(ret, val)\n  else\n    for pair in pairs\n      push(ret, pair[1]);\n  ret\n\n// join values with the given delimiter\n\njoin(delim, vals...)\n  buf = ''\n  vals = vals[0] if length(vals) == 1\n  for val, i in vals\n    buf += i ? delim + val : val\n\n// add a CSS rule to the containing block\n\n// - This definition allows add-property to be used as a mixin\n// - It has the same effect as interpolation but allows users\n//   to opt for a functional style\n\nadd-property-function = add-property\nadd-property(name, expr)\n  if mixin\n    {name} expr\n  else\n    add-property-function(name, expr)\n\nprefix-classes(prefix)\n  -prefix-classes(prefix, block)\n\n// Caching mixin, use inside your functions to enable caching by extending.\n\n$stylus_mixin_cache = {}\ncache()\n  $key = (current-media() or 'no-media') + '__' + called-from[0] + '__' + arguments\n  if $key in $stylus_mixin_cache\n    @extend {\"$cache_placeholder_for_\" + $stylus_mixin_cache[$key]}\n  else if 'cache' in called-from\n    {block}\n  else\n    $id = length($stylus_mixin_cache)\n\n    &,\n    /$cache_placeholder_for_{$id}\n      $stylus_mixin_cache[$key] = $id\n      {block}\n","$svg-common \n\tbackground url(sprite.css.svg) no-repeat\n\n.svg-facebook\n\t@extend $svg-common\n\tbackground-position 0 0\n\n.svg-facebook-icon\n\twidth 50px\n\theight 50px\n\n.svg-spinner\n\t@extend $svg-common\n\tbackground-position 50% 0\n\n.svg-spinner-icon\n\twidth 50px\n\theight 50px\n\n.svg-twitter\n\t@extend $svg-common\n\tbackground-position 0 100%\n\n.svg-twitter-icon\n\twidth 50px\n\theight 50px\n\n.svg-vkontakte\n\t@extend $svg-common\n\tbackground-position 50% 100%\n\n.svg-vkontakte-icon\n\twidth 50px\n\theight 50px\n\n.svg-youtube\n\t@extend $svg-common\n\tbackground-position 100% 0\n\n.svg-youtube-icon\n\twidth 50px\n\theight 50px\n\n","/* Slider */\n.slick-slider\n{\n    position: relative;\n\n    display: block;\n\n    -moz-box-sizing: border-box;\n         box-sizing: border-box;\n\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n\n    -webkit-touch-callout: none;\n    -khtml-user-select: none;\n    -ms-touch-action: pan-y;\n        touch-action: pan-y;\n    -webkit-tap-highlight-color: transparent;\n}\n\n.slick-list\n{\n    position: relative;\n\n    display: block;\n    overflow: hidden;\n\n    margin: 0;\n    padding: 0;\n}\n.slick-list:focus\n{\n    outline: none;\n}\n.slick-list.dragging\n{\n    cursor: pointer;\n    cursor: hand;\n}\n\n.slick-slider .slick-track,\n.slick-slider .slick-list\n{\n    -webkit-transform: translate3d(0, 0, 0);\n       -moz-transform: translate3d(0, 0, 0);\n        -ms-transform: translate3d(0, 0, 0);\n         -o-transform: translate3d(0, 0, 0);\n            transform: translate3d(0, 0, 0);\n}\n\n.slick-track\n{\n    position: relative;\n    top: 0;\n    left: 0;\n\n    display: block;\n}\n.slick-track:before,\n.slick-track:after\n{\n    display: table;\n\n    content: '';\n}\n.slick-track:after\n{\n    clear: both;\n}\n.slick-loading .slick-track\n{\n    visibility: hidden;\n}\n\n.slick-slide\n{\n    display: none;\n    float: left;\n\n    height: 100%;\n    min-height: 1px;\n}\n[dir='rtl'] .slick-slide\n{\n    float: right;\n}\n.slick-slide img\n{\n    display: block;\n}\n.slick-slide.slick-loading img\n{\n    display: none;\n}\n.slick-slide.dragging img\n{\n    pointer-events: none;\n}\n.slick-initialized .slick-slide\n{\n    display: block;\n}\n.slick-loading .slick-slide\n{\n    visibility: hidden;\n}\n.slick-vertical .slick-slide\n{\n    display: block;\n\n    height: auto;\n\n    border: 1px solid transparent;\n}","@keyframes spin\n  100%\n    transform rotate(360deg)\n\n.svg-spinner-icon\n  position relative\n  display block\n  animation spin 1s steps(12)infinite\n\n.icon-spinner\n  position relative\n  display inline-block\n  vertical-align middle\n  overflow hidden\n","body\n  width 60em\n  margin 4em auto\n  text-align center\n\nheader\nfooter\n  margin 4em 0\n  display flex\n  align-items center\n  justify-content space-between"],"sourceRoot":"/source/"}